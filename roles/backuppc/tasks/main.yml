---

- name: APT | Install BackupPC and few related tools 
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
    - backuppc
    - fcgiwrap
    - python-passlib
  notify: [ restart backuppc, restart fcgiwrap ]

- name: TEMPLATE | Deploy unsecure vhost on Nginx
  template: src=nginx/vhost.j2 dest=/etc/nginx/sites-available/{{ backuppc_server_name }}
  notify: reload nginx
  when: backuppc_use_ssl == 'no'

- name: TEMPLATE | Deploy secure vhost on Nginx
  template: src=nginx/vhost_ssl.j2 dest=/etc/nginx/sites-available/{{ backuppc_server_name }}
  notify: reload nginx
  when: backuppc_use_ssl == 'yes'

- name: FILE | Enable Vhost 
  file: src=/etc/nginx/sites-available/{{ backuppc_server_name }} dest=/etc/nginx/sites-enabled/{{ backuppc_server_name }} state=link
  notify: [ reload nginx, restart fcgiwrap ]

- name: HTPASSWD | Create user for BackupPC management
  htpasswd: path=/etc/backuppc/htpasswd name={{ item.user }} password={{ item.pass }} owner=backuppc group=www-data mode=0640
  with_items: backuppc_users
  notify: reload nginx

- name: USER | Create SSH key for backuppc user
  user: name=backuppc generate_ssh_key=yes ssh_key_comment='backuppc@{{ backuppc_server_name }}'

- name: FILE | Create directory to host key
  file: path=/var/www/backuppc state=directory mode=0755 owner=backuppc

- name: FILE | Deploy hardlink from SSH Key:p
  file: src=/var/lib/backuppc/.ssh/id_rsa.pub dest=/var/www/backuppc/id_rsa.pub state=hard 
